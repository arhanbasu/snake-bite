{"ast":null,"code":"var _jsxFileName = \"/home/arhan/projects/snake-game/frontend/src/game.js\",\n  _s = $RefreshSig$();\n/*import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst Game = () => {\n  const [gameState, setGameState] = useState(null);\n\n  // Start the game on initial load\n  useEffect(() => {\n    axios.get('http://localhost:5000/api/start')\n      .then(response => setGameState(response.data))\n      .catch(error => console.error(error));\n  }, []);\n\n  // Update game state periodically\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      axios.get('http://localhost:5000/api/state')\n        .then(response => setGameState(response.data))\n        .catch(error => console.error(error));\n    }, 100);\n\n    return () => clearInterval(intervalId);\n  }, []);\n\n  // Handle keyboard input for direction change\n  useEffect(() => {\n    const handleKeyDown = (event) => {\n      const keyDirectionMap = {\n        ArrowUp: 'UP',\n        ArrowLeft: 'LEFT',\n        ArrowDown: 'DOWN',\n        ArrowRight: 'RIGHT',\n      };\n      const direction = keyDirectionMap[event.key];\n      if (direction) {\n        axios.post('http://localhost:5000/api/change-direction', { direction })\n          .catch(error => console.error(error));\n      }\n    };\n\n    window.addEventListener('keydown', handleKeyDown);\n    return () => window.removeEventListener('keydown', handleKeyDown);\n  }, []);\n\n  // Render game board\n  if (!gameState) return <div>Loading...</div>;\n\n  return (\n    <div>\n      <h1>Snake Game</h1>\n      <div className=\"grid\">\n        {gameState.snake.map((segment, index) => (\n          <div\n            key={index}\n            style={{\n              position: 'absolute',\n              top: `${segment.y * 20}px`,\n              left: `${segment.x * 20}px`,\n              width: '20px',\n              height: '20px',\n              backgroundColor: 'green'\n            }}\n          />\n        ))}\n        <div\n          style={{\n            position: 'absolute',\n            top: `${gameState.food.y * 20}px`,\n            left: `${gameState.food.x * 20}px`,\n            width: '20px',\n            height: '20px',\n            backgroundColor: 'red'\n          }}\n        />\n      </div>\n      <div>Score: {gameState.score}</div>\n      {gameState.gameOver && <div>Game Over</div>}\n    </div>\n  );\n};\n\nexport default Game;*/\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './Game.css'; // Custom CSS file for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Game = () => {\n  _s();\n  const [gameState, setGameState] = useState(null);\n  useEffect(() => {\n    startGame();\n  }, []);\n  const startGame = () => {\n    axios.get('http://localhost:5000/api/start').then(response => setGameState(response.data)).catch(error => console.error(error));\n  };\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      axios.get('http://localhost:5000/api/state').then(response => setGameState(response.data)).catch(error => console.error(error));\n    }, 100);\n    return () => clearInterval(intervalId);\n  }, []);\n  useEffect(() => {\n    const handleKeyDown = event => {\n      const keyDirectionMap = {\n        ArrowUp: 'UP',\n        ArrowLeft: 'LEFT',\n        ArrowDown: 'DOWN',\n        ArrowRight: 'RIGHT'\n      };\n      const direction = keyDirectionMap[event.key];\n      if (direction) {\n        axios.post('http://localhost:5000/api/change-direction', {\n          direction\n        }).catch(error => console.error(error));\n      }\n    };\n    window.addEventListener('keydown', handleKeyDown);\n    return () => window.removeEventListener('keydown', handleKeyDown);\n  }, []);\n  if (!gameState) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 26\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title\",\n      children: \"Snake Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-board\",\n      children: [gameState.snake.map((segment, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"snake-segment\",\n        style: {\n          top: `${segment.y * 20}px`,\n          left: `${segment.x * 20}px`\n        }\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"food\",\n        style: {\n          top: `${gameState.food.y * 20}px`,\n          left: `${gameState.food.x * 20}px`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), gameState.gameOver && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"overlay\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"game-over\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Game Over\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: startGame,\n            children: \"Restart\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"score\",\n      children: [\"Score: \", gameState.score]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 5\n  }, this);\n};\n_s(Game, \"kcsnc3vxc6Mk45hxZ4xhu0kFw3U=\");\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Game","_s","gameState","setGameState","startGame","get","then","response","data","catch","error","console","intervalId","setInterval","clearInterval","handleKeyDown","event","keyDirectionMap","ArrowUp","ArrowLeft","ArrowDown","ArrowRight","direction","key","post","window","addEventListener","removeEventListener","children","fileName","_jsxFileName","lineNumber","columnNumber","className","snake","map","segment","index","style","top","y","left","x","food","gameOver","onClick","score","_c","$RefreshReg$"],"sources":["/home/arhan/projects/snake-game/frontend/src/game.js"],"sourcesContent":["/*import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst Game = () => {\n  const [gameState, setGameState] = useState(null);\n\n  // Start the game on initial load\n  useEffect(() => {\n    axios.get('http://localhost:5000/api/start')\n      .then(response => setGameState(response.data))\n      .catch(error => console.error(error));\n  }, []);\n\n  // Update game state periodically\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      axios.get('http://localhost:5000/api/state')\n        .then(response => setGameState(response.data))\n        .catch(error => console.error(error));\n    }, 100);\n\n    return () => clearInterval(intervalId);\n  }, []);\n\n  // Handle keyboard input for direction change\n  useEffect(() => {\n    const handleKeyDown = (event) => {\n      const keyDirectionMap = {\n        ArrowUp: 'UP',\n        ArrowLeft: 'LEFT',\n        ArrowDown: 'DOWN',\n        ArrowRight: 'RIGHT',\n      };\n      const direction = keyDirectionMap[event.key];\n      if (direction) {\n        axios.post('http://localhost:5000/api/change-direction', { direction })\n          .catch(error => console.error(error));\n      }\n    };\n\n    window.addEventListener('keydown', handleKeyDown);\n    return () => window.removeEventListener('keydown', handleKeyDown);\n  }, []);\n\n  // Render game board\n  if (!gameState) return <div>Loading...</div>;\n\n  return (\n    <div>\n      <h1>Snake Game</h1>\n      <div className=\"grid\">\n        {gameState.snake.map((segment, index) => (\n          <div\n            key={index}\n            style={{\n              position: 'absolute',\n              top: `${segment.y * 20}px`,\n              left: `${segment.x * 20}px`,\n              width: '20px',\n              height: '20px',\n              backgroundColor: 'green'\n            }}\n          />\n        ))}\n        <div\n          style={{\n            position: 'absolute',\n            top: `${gameState.food.y * 20}px`,\n            left: `${gameState.food.x * 20}px`,\n            width: '20px',\n            height: '20px',\n            backgroundColor: 'red'\n          }}\n        />\n      </div>\n      <div>Score: {gameState.score}</div>\n      {gameState.gameOver && <div>Game Over</div>}\n    </div>\n  );\n};\n\nexport default Game;*/\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './Game.css'; // Custom CSS file for styling\n\nconst Game = () => {\n  const [gameState, setGameState] = useState(null);\n\n  useEffect(() => {\n    startGame();\n  }, []);\n\n  const startGame = () => {\n    axios.get('http://localhost:5000/api/start')\n      .then(response => setGameState(response.data))\n      .catch(error => console.error(error));\n  };\n\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      axios.get('http://localhost:5000/api/state')\n        .then(response => setGameState(response.data))\n        .catch(error => console.error(error));\n    }, 100);\n    return () => clearInterval(intervalId);\n  }, []);\n\n  useEffect(() => {\n    const handleKeyDown = (event) => {\n      const keyDirectionMap = {\n        ArrowUp: 'UP',\n        ArrowLeft: 'LEFT',\n        ArrowDown: 'DOWN',\n        ArrowRight: 'RIGHT',\n      };\n      const direction = keyDirectionMap[event.key];\n      if (direction) {\n        axios.post('http://localhost:5000/api/change-direction', { direction })\n          .catch(error => console.error(error));\n      }\n    };\n\n    window.addEventListener('keydown', handleKeyDown);\n    return () => window.removeEventListener('keydown', handleKeyDown);\n  }, []);\n\n  if (!gameState) return <div>Loading...</div>;\n\n  return (\n    <div className=\"game-container\">\n      <h1 className=\"title\">Snake Game</h1>\n      <div className=\"game-board\">\n        {gameState.snake.map((segment, index) => (\n          <div\n            key={index}\n            className=\"snake-segment\"\n            style={{\n              top: `${segment.y * 20}px`,\n              left: `${segment.x * 20}px`,\n            }}\n          />\n        ))}\n        <div\n          className=\"food\"\n          style={{\n            top: `${gameState.food.y * 20}px`,\n            left: `${gameState.food.x * 20}px`,\n          }}\n        />\n        {gameState.gameOver && (\n          <div className=\"overlay\">\n            <div className=\"game-over\">\n              <h2>Game Over</h2>\n              <button onClick={startGame}>Restart</button>\n            </div>\n          </div>\n        )}\n      </div>\n      <div className=\"score\">Score: {gameState.score}</div>\n    </div>\n  );\n};\n\nexport default Game;\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}