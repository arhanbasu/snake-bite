{"ast":null,"code":"var _jsxFileName = \"/home/arhan/projects/snake-game/frontend/src/Game.js\",\n  _s = $RefreshSig$();\n/*import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css';\n\nconst Game = () => {\n  const [gameState, setGameState] = useState(null);\n  const [isStarted, setIsStarted] = useState(false);\n\n  const startGame = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/api/start');\n      setGameState(response.data);\n      setIsStarted(true);\n    } catch (error) {\n      console.error(\"Error starting the game:\", error);\n    }\n  };\n\n  useEffect(() => {\n    if (isStarted) {\n      const intervalId = setInterval(async () => {\n        try {\n          const response = await axios.get('http://localhost:5000/api/state');\n          setGameState(response.data);\n        } catch (error) {\n          console.error(\"Error updating game state:\", error);\n        }\n      }, 100);\n\n      return () => clearInterval(intervalId);\n    }\n  }, [isStarted]);\n\n  const handleDirectionChange = async (direction) => {\n    try {\n      await axios.post('http://localhost:5000/api/change-direction', { direction });\n    } catch (error) {\n      console.error(\"Error changing direction:\", error);\n    }\n  };\n\n  if (!gameState) {\n    return (\n      <div className=\"game-container\">\n        <h1 className=\"title\">Snake Game</h1>\n        <button className=\"start-button\" onClick={startGame}>Start Game</button>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"game-container\">\n      <h1 className=\"title\">Snake Game</h1>\n\n      {!isStarted ? (\n        <button className=\"start-button\" onClick={startGame}>Start Game</button>\n      ) : (\n        <>\n          <div className=\"game-board\">\n            {gameState.snake.map((segment, index) => (\n              <div\n                key={index}\n                className=\"snake-segment\"\n                style={{\n                  top: `${segment.y * 20}px`,\n                  left: `${segment.x * 20}px`,\n                }}\n              />\n            ))}\n            <div\n              className=\"food\"\n              style={{\n                top: `${gameState.food.y * 20}px`,\n                left: `${gameState.food.x * 20}px`,\n              }}\n            />\n            {gameState.gameOver && (\n              <div className=\"overlay\">\n                <div className=\"game-over\">\n                  <h2>Game Over</h2>\n                  <button onClick={startGame}>Restart</button>\n                </div>\n              </div>\n            )}\n          </div>\n\n          <div className=\"score\">Score: {gameState.score}</div>\n\n          <div className=\"controls\">\n            <button onClick={() => handleDirectionChange('UP')}>↑</button>\n            <div>\n              <button onClick={() => handleDirectionChange('LEFT')}>←</button>\n              <button onClick={() => handleDirectionChange('RIGHT')}>→</button>\n            </div>\n            <button onClick={() => handleDirectionChange('DOWN')}>↓</button>\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Game;\n*/\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Game = () => {\n  _s();\n  const [gameState, setGameState] = useState(null);\n  const [isStarted, setIsStarted] = useState(false);\n  const startGame = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/api/start');\n      setGameState(response.data);\n      setIsStarted(true);\n    } catch (error) {\n      console.error(\"Error starting the game:\", error);\n    }\n  };\n  useEffect(() => {\n    if (isStarted) {\n      const intervalId = setInterval(async () => {\n        try {\n          const response = await axios.get('http://localhost:5000/api/state');\n          setGameState(response.data);\n        } catch (error) {\n          console.error(\"Error updating game state:\", error);\n        }\n      }, 100);\n      return () => clearInterval(intervalId);\n    }\n  }, [isStarted]);\n  const handleDirectionChange = async direction => {\n    try {\n      await axios.post('http://localhost:5000/api/change-direction', {\n        direction\n      });\n    } catch (error) {\n      console.error(\"Error changing direction:\", error);\n    }\n  };\n  if (!gameState) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"title\",\n        children: \"Snake Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"start-button\",\n        onClick: startGame,\n        children: \"Start Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title\",\n      children: \"Snake Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this), !isStarted ? /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"start-button\",\n      onClick: startGame,\n      children: \"Start Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-board\",\n        children: [gameState.snake.map((segment, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: index === 0 ? \"snake-segment snake-head\" : \"snake-segment\",\n          style: {\n            top: `${segment.y * 20}px`,\n            left: `${segment.x * 20}px`\n          }\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 15\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"food\",\n          style: {\n            top: `${gameState.food.y * 20}px`,\n            left: `${gameState.food.x * 20}px`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 13\n        }, this), gameState.gameOver && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"overlay\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"game-over\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Game Over\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: startGame,\n              children: \"Restart\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"score\",\n        children: [\"Score: \", gameState.score]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDirectionChange('UP'),\n          children: \"\\u2191\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleDirectionChange('LEFT'),\n            children: \"\\u2190\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleDirectionChange('RIGHT'),\n            children: \"\\u2192\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDirectionChange('DOWN'),\n          children: \"\\u2193\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 157,\n    columnNumber: 5\n  }, this);\n};\n_s(Game, \"qlrG2dM+MqoSrJPCYvfz8Q4InW8=\");\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","Game","_s","gameState","setGameState","isStarted","setIsStarted","startGame","response","get","data","error","console","intervalId","setInterval","clearInterval","handleDirectionChange","direction","post","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","snake","map","segment","index","style","top","y","left","x","food","gameOver","score","_c","$RefreshReg$"],"sources":["/home/arhan/projects/snake-game/frontend/src/Game.js"],"sourcesContent":["/*import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css';\n\nconst Game = () => {\n  const [gameState, setGameState] = useState(null);\n  const [isStarted, setIsStarted] = useState(false);\n\n  const startGame = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/api/start');\n      setGameState(response.data);\n      setIsStarted(true);\n    } catch (error) {\n      console.error(\"Error starting the game:\", error);\n    }\n  };\n\n  useEffect(() => {\n    if (isStarted) {\n      const intervalId = setInterval(async () => {\n        try {\n          const response = await axios.get('http://localhost:5000/api/state');\n          setGameState(response.data);\n        } catch (error) {\n          console.error(\"Error updating game state:\", error);\n        }\n      }, 100);\n\n      return () => clearInterval(intervalId);\n    }\n  }, [isStarted]);\n\n  const handleDirectionChange = async (direction) => {\n    try {\n      await axios.post('http://localhost:5000/api/change-direction', { direction });\n    } catch (error) {\n      console.error(\"Error changing direction:\", error);\n    }\n  };\n\n  if (!gameState) {\n    return (\n      <div className=\"game-container\">\n        <h1 className=\"title\">Snake Game</h1>\n        <button className=\"start-button\" onClick={startGame}>Start Game</button>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"game-container\">\n      <h1 className=\"title\">Snake Game</h1>\n\n      {!isStarted ? (\n        <button className=\"start-button\" onClick={startGame}>Start Game</button>\n      ) : (\n        <>\n          <div className=\"game-board\">\n            {gameState.snake.map((segment, index) => (\n              <div\n                key={index}\n                className=\"snake-segment\"\n                style={{\n                  top: `${segment.y * 20}px`,\n                  left: `${segment.x * 20}px`,\n                }}\n              />\n            ))}\n            <div\n              className=\"food\"\n              style={{\n                top: `${gameState.food.y * 20}px`,\n                left: `${gameState.food.x * 20}px`,\n              }}\n            />\n            {gameState.gameOver && (\n              <div className=\"overlay\">\n                <div className=\"game-over\">\n                  <h2>Game Over</h2>\n                  <button onClick={startGame}>Restart</button>\n                </div>\n              </div>\n            )}\n          </div>\n\n          <div className=\"score\">Score: {gameState.score}</div>\n\n          <div className=\"controls\">\n            <button onClick={() => handleDirectionChange('UP')}>↑</button>\n            <div>\n              <button onClick={() => handleDirectionChange('LEFT')}>←</button>\n              <button onClick={() => handleDirectionChange('RIGHT')}>→</button>\n            </div>\n            <button onClick={() => handleDirectionChange('DOWN')}>↓</button>\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Game;\n*/\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css';\n\nconst Game = () => {\n  const [gameState, setGameState] = useState(null);\n  const [isStarted, setIsStarted] = useState(false);\n\n  const startGame = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/api/start');\n      setGameState(response.data);\n      setIsStarted(true);\n    } catch (error) {\n      console.error(\"Error starting the game:\", error);\n    }\n  };\n\n  useEffect(() => {\n    if (isStarted) {\n      const intervalId = setInterval(async () => {\n        try {\n          const response = await axios.get('http://localhost:5000/api/state');\n          setGameState(response.data);\n        } catch (error) {\n          console.error(\"Error updating game state:\", error);\n        }\n      }, 100);\n\n      return () => clearInterval(intervalId);\n    }\n  }, [isStarted]);\n\n  const handleDirectionChange = async (direction) => {\n    try {\n      await axios.post('http://localhost:5000/api/change-direction', { direction });\n    } catch (error) {\n      console.error(\"Error changing direction:\", error);\n    }\n  };\n\n  if (!gameState) {\n    return (\n      <div className=\"game-container\">\n        <h1 className=\"title\">Snake Game</h1>\n        <button className=\"start-button\" onClick={startGame}>Start Game</button>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"game-container\">\n      <h1 className=\"title\">Snake Game</h1>\n\n      {!isStarted ? (\n        <button className=\"start-button\" onClick={startGame}>Start Game</button>\n      ) : (\n        <>\n          <div className=\"game-board\">\n            {gameState.snake.map((segment, index) => (\n              <div\n                key={index}\n                className={index === 0 ? \"snake-segment snake-head\" : \"snake-segment\"}\n                style={{\n                  top: `${segment.y * 20}px`,\n                  left: `${segment.x * 20}px`,\n                }}\n              />\n            ))}\n            <div\n              className=\"food\"\n              style={{\n                top: `${gameState.food.y * 20}px`,\n                left: `${gameState.food.x * 20}px`,\n              }}\n            />\n            {gameState.gameOver && (\n              <div className=\"overlay\">\n                <div className=\"game-over\">\n                  <h2>Game Over</h2>\n                  <button onClick={startGame}>Restart</button>\n                </div>\n              </div>\n            )}\n          </div>\n\n          <div className=\"score\">Score: {gameState.score}</div>\n\n          <div className=\"controls\">\n            <button onClick={() => handleDirectionChange('UP')}>↑</button>\n            <div>\n              <button onClick={() => handleDirectionChange('LEFT')}>←</button>\n              <button onClick={() => handleDirectionChange('RIGHT')}>→</button>\n            </div>\n            <button onClick={() => handleDirectionChange('DOWN')}>↓</button>\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Game;\n\n\n\n"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}