{"ast":null,"code":"var _jsxFileName = \"/home/arhan/projects/snake-game/frontend/src/game.js\",\n  _s = $RefreshSig$();\n/*import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css'; // Custom CSS file for styling\n\nconst Game = () => {\n  const [gameState, setGameState] = useState(null);\n\n  useEffect(() => {\n    startGame();\n  }, []);\n\n  const startGame = () => {\n    axios.get('http://localhost:5000/api/start')\n      .then(response => setGameState(response.data))\n      .catch(error => console.error(error));\n  };\n\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      axios.get('http://localhost:5000/api/state')\n        .then(response => setGameState(response.data))\n        .catch(error => console.error(error));\n    }, 100);\n    return () => clearInterval(intervalId);\n  }, []);\n\n  useEffect(() => {\n    const handleKeyDown = (event) => {\n      const keyDirectionMap = {\n        ArrowUp: 'UP',\n        ArrowLeft: 'LEFT',\n        ArrowDown: 'DOWN',\n        ArrowRight: 'RIGHT',\n      };\n      const direction = keyDirectionMap[event.key];\n      if (direction) {\n        axios.post('http://localhost:5000/api/change-direction', { direction })\n          .catch(error => console.error(error));\n      }\n    };\n\n    window.addEventListener('keydown', handleKeyDown);\n    return () => window.removeEventListener('keydown', handleKeyDown);\n  }, []);\n\n  if (!gameState) return <div>Loading...</div>;\n\n  return (\n    <div className=\"game-container\">\n      <h1 className=\"title\">Snake Game</h1>\n      <div className=\"game-board\">\n        {gameState.snake.map((segment, index) => (\n          <div\n            key={index}\n            className=\"snake-segment\"\n            style={{\n              top: `${segment.y * 20}px`,\n              left: `${segment.x * 20}px`,\n            }}\n          />\n        ))}\n        <div\n          className=\"food\"\n          style={{\n            top: `${gameState.food.y * 20}px`,\n            left: `${gameState.food.x * 20}px`,\n          }}\n        />\n        {gameState.gameOver && (\n          <div className=\"overlay\">\n            <div className=\"game-over\">\n              <h2>Game Over</h2>\n              <button onClick={startGame}>Restart</button>\n            </div>\n          </div>\n        )}\n      </div>\n      <div className=\"score\">Score: {gameState.score}</div>\n    </div>\n  );\n};\n\nexport default Game;*/\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Game = () => {\n  _s();\n  const [gameState, setGameState] = useState(null);\n  const [isStarted, setIsStarted] = useState(false);\n  const startGame = () => {\n    axios.get('http://localhost:5000/api/start').then(response => {\n      console.log(\"Game started:\", response.data);\n      setGameState(response.data);\n      setIsStarted(true);\n    }).catch(error => {\n      console.error(\"Error starting game:\", error);\n    });\n  };\n  useEffect(() => {\n    if (isStarted) {\n      const intervalId = setInterval(() => {\n        axios.get('http://localhost:5000/api/state').then(response => {\n          console.log(\"Game state updated:\", response.data);\n          setGameState(response.data);\n        }).catch(error => console.error(\"Error updating state:\", error));\n      }, 100);\n      return () => clearInterval(intervalId);\n    }\n  }, [isStarted]);\n  const handleDirectionChange = direction => {\n    axios.post('http://localhost:5000/api/change-direction', {\n      direction\n    }).catch(error => console.error(error));\n  };\n  if (!gameState) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 26\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title\",\n      children: \"Snake Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), !isStarted ? /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"start-button\",\n      onClick: startGame,\n      children: \"Start Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-board\",\n        children: [gameState.snake.map((segment, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"snake-segment\",\n          style: {\n            top: `${segment.y * 20}px`,\n            left: `${segment.x * 20}px`\n          }\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 15\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"food\",\n          style: {\n            top: `${gameState.food.y * 20}px`,\n            left: `${gameState.food.x * 20}px`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 13\n        }, this), gameState.gameOver && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"overlay\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"game-over\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Game Over\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: startGame,\n              children: \"Restart\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"score\",\n        children: [\"Score: \", gameState.score]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDirectionChange('UP'),\n          children: \"\\u2191\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleDirectionChange('LEFT'),\n            children: \"\\u2190\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleDirectionChange('RIGHT'),\n            children: \"\\u2192\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDirectionChange('DOWN'),\n          children: \"\\u2193\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 5\n  }, this);\n};\n_s(Game, \"qlrG2dM+MqoSrJPCYvfz8Q4InW8=\");\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","Game","_s","gameState","setGameState","isStarted","setIsStarted","startGame","get","then","response","console","log","data","catch","error","intervalId","setInterval","clearInterval","handleDirectionChange","direction","post","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","snake","map","segment","index","style","top","y","left","x","food","gameOver","score","_c","$RefreshReg$"],"sources":["/home/arhan/projects/snake-game/frontend/src/game.js"],"sourcesContent":["/*import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css'; // Custom CSS file for styling\n\nconst Game = () => {\n  const [gameState, setGameState] = useState(null);\n\n  useEffect(() => {\n    startGame();\n  }, []);\n\n  const startGame = () => {\n    axios.get('http://localhost:5000/api/start')\n      .then(response => setGameState(response.data))\n      .catch(error => console.error(error));\n  };\n\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      axios.get('http://localhost:5000/api/state')\n        .then(response => setGameState(response.data))\n        .catch(error => console.error(error));\n    }, 100);\n    return () => clearInterval(intervalId);\n  }, []);\n\n  useEffect(() => {\n    const handleKeyDown = (event) => {\n      const keyDirectionMap = {\n        ArrowUp: 'UP',\n        ArrowLeft: 'LEFT',\n        ArrowDown: 'DOWN',\n        ArrowRight: 'RIGHT',\n      };\n      const direction = keyDirectionMap[event.key];\n      if (direction) {\n        axios.post('http://localhost:5000/api/change-direction', { direction })\n          .catch(error => console.error(error));\n      }\n    };\n\n    window.addEventListener('keydown', handleKeyDown);\n    return () => window.removeEventListener('keydown', handleKeyDown);\n  }, []);\n\n  if (!gameState) return <div>Loading...</div>;\n\n  return (\n    <div className=\"game-container\">\n      <h1 className=\"title\">Snake Game</h1>\n      <div className=\"game-board\">\n        {gameState.snake.map((segment, index) => (\n          <div\n            key={index}\n            className=\"snake-segment\"\n            style={{\n              top: `${segment.y * 20}px`,\n              left: `${segment.x * 20}px`,\n            }}\n          />\n        ))}\n        <div\n          className=\"food\"\n          style={{\n            top: `${gameState.food.y * 20}px`,\n            left: `${gameState.food.x * 20}px`,\n          }}\n        />\n        {gameState.gameOver && (\n          <div className=\"overlay\">\n            <div className=\"game-over\">\n              <h2>Game Over</h2>\n              <button onClick={startGame}>Restart</button>\n            </div>\n          </div>\n        )}\n      </div>\n      <div className=\"score\">Score: {gameState.score}</div>\n    </div>\n  );\n};\n\nexport default Game;*/\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css';\n\nconst Game = () => {\n  const [gameState, setGameState] = useState(null);\n  const [isStarted, setIsStarted] = useState(false);\n\n  const startGame = () => {\n  axios.get('http://localhost:5000/api/start')\n    .then(response => {\n      console.log(\"Game started:\", response.data);\n      setGameState(response.data);\n      setIsStarted(true);\n    })\n    .catch(error => {\n      console.error(\"Error starting game:\", error);\n    });\n  };\n\n\n  useEffect(() => {\n  if (isStarted) {\n    const intervalId = setInterval(() => {\n      axios.get('http://localhost:5000/api/state')\n        .then(response => {\n          console.log(\"Game state updated:\", response.data);\n          setGameState(response.data);\n        })\n        .catch(error => console.error(\"Error updating state:\", error));\n    }, 100);\n    return () => clearInterval(intervalId);\n  }\n}, [isStarted]);\n\n\n  const handleDirectionChange = (direction) => {\n    axios.post('http://localhost:5000/api/change-direction', { direction })\n      .catch(error => console.error(error));\n  };\n\n  if (!gameState) return <div>Loading...</div>;\n\n  return (\n    <div className=\"game-container\">\n      <h1 className=\"title\">Snake Game</h1>\n\n      {!isStarted ? (\n        <button className=\"start-button\" onClick={startGame}>Start Game</button>\n      ) : (\n        <>\n          <div className=\"game-board\">\n            {gameState.snake.map((segment, index) => (\n              <div\n                key={index}\n                className=\"snake-segment\"\n                style={{\n                  top: `${segment.y * 20}px`,\n                  left: `${segment.x * 20}px`,\n                }}\n              />\n            ))}\n            <div\n              className=\"food\"\n              style={{\n                top: `${gameState.food.y * 20}px`,\n                left: `${gameState.food.x * 20}px`,\n              }}\n            />\n            {gameState.gameOver && (\n              <div className=\"overlay\">\n                <div className=\"game-over\">\n                  <h2>Game Over</h2>\n                  <button onClick={startGame}>Restart</button>\n                </div>\n              </div>\n            )}\n          </div>\n\n          <div className=\"score\">Score: {gameState.score}</div>\n\n          <div className=\"controls\">\n            <button onClick={() => handleDirectionChange('UP')}>↑</button>\n            <div>\n              <button onClick={() => handleDirectionChange('LEFT')}>←</button>\n              <button onClick={() => handleDirectionChange('RIGHT')}>→</button>\n            </div>\n            <button onClick={() => handleDirectionChange('DOWN')}>↓</button>\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Game;\n\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}