{"ast":null,"code":"var _jsxFileName = \"/home/arhan/projects/snake-game/frontend/src/game.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Game = () => {\n  _s();\n  const [gameState, setGameState] = useState(null);\n\n  // Start the game on initial load\n  useEffect(() => {\n    axios.get('http://localhost:5000/api/start').then(response => setGameState(response.data)).catch(error => console.error(error));\n  }, []);\n\n  // Update game state periodically\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      axios.get('http://localhost:5000/api/state').then(response => setGameState(response.data)).catch(error => console.error(error));\n    }, 100);\n    return () => clearInterval(intervalId);\n  }, []);\n\n  // Handle keyboard input for direction change\n  useEffect(() => {\n    const handleKeyDown = event => {\n      const keyDirectionMap = {\n        ArrowUp: 'UP',\n        ArrowLeft: 'LEFT',\n        ArrowDown: 'DOWN',\n        ArrowRight: 'RIGHT'\n      };\n      const direction = keyDirectionMap[event.key];\n      if (direction) {\n        axios.post('http://localhost:5000/api/change-direction', {\n          direction\n        }).catch(error => console.error(error));\n      }\n    };\n    window.addEventListener('keydown', handleKeyDown);\n    return () => window.removeEventListener('keydown', handleKeyDown);\n  }, []);\n\n  // Render game board\n  if (!gameState) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 26\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Snake Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid\",\n      children: [gameState.snake.map((segment, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: 'absolute',\n          top: `${segment.y * 20}px`,\n          left: `${segment.x * 20}px`,\n          width: '20px',\n          height: '20px',\n          backgroundColor: 'green'\n        }\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: 'absolute',\n          top: `${gameState.food.y * 20}px`,\n          left: `${gameState.food.x * 20}px`,\n          width: '20px',\n          height: '20px',\n          backgroundColor: 'red'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Score: \", gameState.score]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), gameState.gameOver && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Game Over\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 30\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(Game, \"kcsnc3vxc6Mk45hxZ4xhu0kFw3U=\");\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Game","_s","gameState","setGameState","get","then","response","data","catch","error","console","intervalId","setInterval","clearInterval","handleKeyDown","event","keyDirectionMap","ArrowUp","ArrowLeft","ArrowDown","ArrowRight","direction","key","post","window","addEventListener","removeEventListener","children","fileName","_jsxFileName","lineNumber","columnNumber","className","snake","map","segment","index","style","position","top","y","left","x","width","height","backgroundColor","food","score","gameOver","_c","$RefreshReg$"],"sources":["/home/arhan/projects/snake-game/frontend/src/game.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst Game = () => {\n  const [gameState, setGameState] = useState(null);\n\n  // Start the game on initial load\n  useEffect(() => {\n    axios.get('http://localhost:5000/api/start')\n      .then(response => setGameState(response.data))\n      .catch(error => console.error(error));\n  }, []);\n\n  // Update game state periodically\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      axios.get('http://localhost:5000/api/state')\n        .then(response => setGameState(response.data))\n        .catch(error => console.error(error));\n    }, 100);\n\n    return () => clearInterval(intervalId);\n  }, []);\n\n  // Handle keyboard input for direction change\n  useEffect(() => {\n    const handleKeyDown = (event) => {\n      const keyDirectionMap = {\n        ArrowUp: 'UP',\n        ArrowLeft: 'LEFT',\n        ArrowDown: 'DOWN',\n        ArrowRight: 'RIGHT',\n      };\n      const direction = keyDirectionMap[event.key];\n      if (direction) {\n        axios.post('http://localhost:5000/api/change-direction', { direction })\n          .catch(error => console.error(error));\n      }\n    };\n\n    window.addEventListener('keydown', handleKeyDown);\n    return () => window.removeEventListener('keydown', handleKeyDown);\n  }, []);\n\n  // Render game board\n  if (!gameState) return <div>Loading...</div>;\n\n  return (\n    <div>\n      <h1>Snake Game</h1>\n      <div className=\"grid\">\n        {gameState.snake.map((segment, index) => (\n          <div\n            key={index}\n            style={{\n              position: 'absolute',\n              top: `${segment.y * 20}px`,\n              left: `${segment.x * 20}px`,\n              width: '20px',\n              height: '20px',\n              backgroundColor: 'green'\n            }}\n          />\n        ))}\n        <div\n          style={{\n            position: 'absolute',\n            top: `${gameState.food.y * 20}px`,\n            left: `${gameState.food.x * 20}px`,\n            width: '20px',\n            height: '20px',\n            backgroundColor: 'red'\n          }}\n        />\n      </div>\n      <div>Score: {gameState.score}</div>\n      {gameState.gameOver && <div>Game Over</div>}\n    </div>\n  );\n};\n\nexport default Game;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}